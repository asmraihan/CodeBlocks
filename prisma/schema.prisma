generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Account {
  id                       String  @id @default(auto()) @map("_id") @db.ObjectId
  user_id                  String  @map("user_id") @db.ObjectId
  type                     String
  provider                 String
  providerAccountId        String
  refresh_token            String?
  access_token             String?
  expires_at               Int?
  token_type               String?
  scope                    String?
  id_token                 String?
  session_state            String?
  refresh_token_expires_in Int?

  user User @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  user_id      String   @map("user_id") @db.ObjectId
  expires      DateTime
  user         User     @relation(fields: [user_id], references: [id], onDelete: Cascade)
}


model Url {
  id     String  @id @default(auto()) @map("_id") @db.ObjectId
  value  String
  userId String @map("user_id") @db.ObjectId

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  email    String  @unique
  password String
  name     String?
  avatar   String?
  bio      String?
  urls     Url[]

  accounts      Account[]
  sessions      Session[]
  snippets      Snippet[]
  emailVerified DateTime?
  createdAt     DateTime  @default(now())
}

model VerificationToken {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Snippet {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  published Boolean  @default(false)
  title     String
  code      String
  language  String

  authorId String @map("author_id") @db.ObjectId
  author   User   @relation(fields: [authorId], references: [id])
}
